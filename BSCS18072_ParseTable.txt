M[PROG,(] =  
M[PROG,)] =  
M[PROG,,] =  
M[PROG,{] =  
M[PROG,}] =  
M[PROG,;] =  
M[PROG,if] =  
M[PROG,then] =  
M[PROG,else] =  
M[PROG,while] =  
M[PROG,do] =  
M[PROG,repeat] =  
M[PROG,until] =  
M[PROG,skip] =  
M[PROG,:=] =  
M[PROG,int] = PROG DEC PROG'
M[PROG,bool] = PROG DEC PROG'
M[PROG,float] = PROG DEC PROG'
M[PROG,+] =  
M[PROG,-] =  
M[PROG,.] =  
M[PROG,_] =  
M[PROG,a] =  
M[PROG,b] =  
M[PROG,c] =  
M[PROG,d] =  
M[PROG,e] =  
M[PROG,f] =  
M[PROG,g] =  
M[PROG,h] =  
M[PROG,i] =  
M[PROG,j] =  
M[PROG,k] =  
M[PROG,l] =  
M[PROG,m] =  
M[PROG,n] =  
M[PROG,o] =  
M[PROG,p] =  
M[PROG,q] =  
M[PROG,r] =  
M[PROG,s] =  
M[PROG,t] =  
M[PROG,u] =  
M[PROG,v] =  
M[PROG,w] =  
M[PROG,x] =  
M[PROG,y] =  
M[PROG,z] =  
M[PROG,0] =  
M[PROG,1] =  
M[PROG,2] =  
M[PROG,3] =  
M[PROG,4] =  
M[PROG,5] =  
M[PROG,6] =  
M[PROG,7] =  
M[PROG,8] =  
M[PROG,9] =  
M[PROG,==] =  
M[PROG,<] =  
M[PROG,>] =  
M[PROG,<=] =  
M[PROG,>=] =  
M[PROG,*] =  
M[PROG,%] =  
M[PROG,&&] =  
M[PROG,/] =  
M[PROG,||] =  
M[PROG,$] =  
M[PROG',(] =  
M[PROG',)] =  
M[PROG',,] =  
M[PROG',{] =  
M[PROG',}] =  
M[PROG',;] =  
M[PROG',if] =  
M[PROG',then] =  
M[PROG',else] =  
M[PROG',while] =  
M[PROG',do] =  
M[PROG',repeat] =  
M[PROG',until] =  
M[PROG',skip] =  
M[PROG',:=] =  
M[PROG',int] = PROG' PROG
M[PROG',bool] = PROG' PROG
M[PROG',float] = PROG' PROG
M[PROG',+] =  
M[PROG',-] =  
M[PROG',.] =  
M[PROG',_] =  
M[PROG',a] =  
M[PROG',b] =  
M[PROG',c] =  
M[PROG',d] =  
M[PROG',e] =  
M[PROG',f] =  
M[PROG',g] =  
M[PROG',h] =  
M[PROG',i] =  
M[PROG',j] =  
M[PROG',k] =  
M[PROG',l] =  
M[PROG',m] =  
M[PROG',n] =  
M[PROG',o] =  
M[PROG',p] =  
M[PROG',q] =  
M[PROG',r] =  
M[PROG',s] =  
M[PROG',t] =  
M[PROG',u] =  
M[PROG',v] =  
M[PROG',w] =  
M[PROG',x] =  
M[PROG',y] =  
M[PROG',z] =  
M[PROG',0] =  
M[PROG',1] =  
M[PROG',2] =  
M[PROG',3] =  
M[PROG',4] =  
M[PROG',5] =  
M[PROG',6] =  
M[PROG',7] =  
M[PROG',8] =  
M[PROG',9] =  
M[PROG',==] =  
M[PROG',<] =  
M[PROG',>] =  
M[PROG',<=] =  
M[PROG',>=] =  
M[PROG',*] =  
M[PROG',%] =  
M[PROG',&&] =  
M[PROG',/] =  
M[PROG',||] =  
M[PROG',$] = PROG' @
M[DEC,(] =  
M[DEC,)] =  
M[DEC,,] =  
M[DEC,{] =  
M[DEC,}] =  
M[DEC,;] =  
M[DEC,if] =  
M[DEC,then] =  
M[DEC,else] =  
M[DEC,while] =  
M[DEC,do] =  
M[DEC,repeat] =  
M[DEC,until] =  
M[DEC,skip] =  
M[DEC,:=] =  
M[DEC,int] = DEC TYPE IDFR ( VARDEC ) BLOCK
M[DEC,bool] = DEC TYPE IDFR ( VARDEC ) BLOCK
M[DEC,float] = DEC TYPE IDFR ( VARDEC ) BLOCK
M[DEC,+] =  
M[DEC,-] =  
M[DEC,.] =  
M[DEC,_] =  
M[DEC,a] =  
M[DEC,b] =  
M[DEC,c] =  
M[DEC,d] =  
M[DEC,e] =  
M[DEC,f] =  
M[DEC,g] =  
M[DEC,h] =  
M[DEC,i] =  
M[DEC,j] =  
M[DEC,k] =  
M[DEC,l] =  
M[DEC,m] =  
M[DEC,n] =  
M[DEC,o] =  
M[DEC,p] =  
M[DEC,q] =  
M[DEC,r] =  
M[DEC,s] =  
M[DEC,t] =  
M[DEC,u] =  
M[DEC,v] =  
M[DEC,w] =  
M[DEC,x] =  
M[DEC,y] =  
M[DEC,z] =  
M[DEC,0] =  
M[DEC,1] =  
M[DEC,2] =  
M[DEC,3] =  
M[DEC,4] =  
M[DEC,5] =  
M[DEC,6] =  
M[DEC,7] =  
M[DEC,8] =  
M[DEC,9] =  
M[DEC,==] =  
M[DEC,<] =  
M[DEC,>] =  
M[DEC,<=] =  
M[DEC,>=] =  
M[DEC,*] =  
M[DEC,%] =  
M[DEC,&&] =  
M[DEC,/] =  
M[DEC,||] =  
M[DEC,$] =  
M[VARDEC,(] =  
M[VARDEC,)] = VARDEC @
M[VARDEC,,] =  
M[VARDEC,{] =  
M[VARDEC,}] =  
M[VARDEC,;] =  
M[VARDEC,if] =  
M[VARDEC,then] =  
M[VARDEC,else] =  
M[VARDEC,while] =  
M[VARDEC,do] =  
M[VARDEC,repeat] =  
M[VARDEC,until] =  
M[VARDEC,skip] =  
M[VARDEC,:=] =  
M[VARDEC,int] = VARDEC VARDECNE
M[VARDEC,bool] = VARDEC VARDECNE
M[VARDEC,float] = VARDEC VARDECNE
M[VARDEC,+] =  
M[VARDEC,-] =  
M[VARDEC,.] =  
M[VARDEC,_] =  
M[VARDEC,a] =  
M[VARDEC,b] =  
M[VARDEC,c] =  
M[VARDEC,d] =  
M[VARDEC,e] =  
M[VARDEC,f] =  
M[VARDEC,g] =  
M[VARDEC,h] =  
M[VARDEC,i] =  
M[VARDEC,j] =  
M[VARDEC,k] =  
M[VARDEC,l] =  
M[VARDEC,m] =  
M[VARDEC,n] =  
M[VARDEC,o] =  
M[VARDEC,p] =  
M[VARDEC,q] =  
M[VARDEC,r] =  
M[VARDEC,s] =  
M[VARDEC,t] =  
M[VARDEC,u] =  
M[VARDEC,v] =  
M[VARDEC,w] =  
M[VARDEC,x] =  
M[VARDEC,y] =  
M[VARDEC,z] =  
M[VARDEC,0] =  
M[VARDEC,1] =  
M[VARDEC,2] =  
M[VARDEC,3] =  
M[VARDEC,4] =  
M[VARDEC,5] =  
M[VARDEC,6] =  
M[VARDEC,7] =  
M[VARDEC,8] =  
M[VARDEC,9] =  
M[VARDEC,==] =  
M[VARDEC,<] =  
M[VARDEC,>] =  
M[VARDEC,<=] =  
M[VARDEC,>=] =  
M[VARDEC,*] =  
M[VARDEC,%] =  
M[VARDEC,&&] =  
M[VARDEC,/] =  
M[VARDEC,||] =  
M[VARDEC,$] =  
M[VARDECNE',(] =  
M[VARDECNE',)] = VARDECNE' @
M[VARDECNE',,] = VARDECNE' , TYPE IDFR VARDECNE'
M[VARDECNE',{] =  
M[VARDECNE',}] =  
M[VARDECNE',;] =  
M[VARDECNE',if] =  
M[VARDECNE',then] =  
M[VARDECNE',else] =  
M[VARDECNE',while] =  
M[VARDECNE',do] =  
M[VARDECNE',repeat] =  
M[VARDECNE',until] =  
M[VARDECNE',skip] =  
M[VARDECNE',:=] =  
M[VARDECNE',int] =  
M[VARDECNE',bool] =  
M[VARDECNE',float] =  
M[VARDECNE',+] =  
M[VARDECNE',-] =  
M[VARDECNE',.] =  
M[VARDECNE',_] =  
M[VARDECNE',a] =  
M[VARDECNE',b] =  
M[VARDECNE',c] =  
M[VARDECNE',d] =  
M[VARDECNE',e] =  
M[VARDECNE',f] =  
M[VARDECNE',g] =  
M[VARDECNE',h] =  
M[VARDECNE',i] =  
M[VARDECNE',j] =  
M[VARDECNE',k] =  
M[VARDECNE',l] =  
M[VARDECNE',m] =  
M[VARDECNE',n] =  
M[VARDECNE',o] =  
M[VARDECNE',p] =  
M[VARDECNE',q] =  
M[VARDECNE',r] =  
M[VARDECNE',s] =  
M[VARDECNE',t] =  
M[VARDECNE',u] =  
M[VARDECNE',v] =  
M[VARDECNE',w] =  
M[VARDECNE',x] =  
M[VARDECNE',y] =  
M[VARDECNE',z] =  
M[VARDECNE',0] =  
M[VARDECNE',1] =  
M[VARDECNE',2] =  
M[VARDECNE',3] =  
M[VARDECNE',4] =  
M[VARDECNE',5] =  
M[VARDECNE',6] =  
M[VARDECNE',7] =  
M[VARDECNE',8] =  
M[VARDECNE',9] =  
M[VARDECNE',==] =  
M[VARDECNE',<] =  
M[VARDECNE',>] =  
M[VARDECNE',<=] =  
M[VARDECNE',>=] =  
M[VARDECNE',*] =  
M[VARDECNE',%] =  
M[VARDECNE',&&] =  
M[VARDECNE',/] =  
M[VARDECNE',||] =  
M[VARDECNE',$] =  
M[VARDECNE,(] =  
M[VARDECNE,)] =  
M[VARDECNE,,] =  
M[VARDECNE,{] =  
M[VARDECNE,}] =  
M[VARDECNE,;] =  
M[VARDECNE,if] =  
M[VARDECNE,then] =  
M[VARDECNE,else] =  
M[VARDECNE,while] =  
M[VARDECNE,do] =  
M[VARDECNE,repeat] =  
M[VARDECNE,until] =  
M[VARDECNE,skip] =  
M[VARDECNE,:=] =  
M[VARDECNE,int] = VARDECNE TYPE IDFR VARDECNE'
M[VARDECNE,bool] = VARDECNE TYPE IDFR VARDECNE'
M[VARDECNE,float] = VARDECNE TYPE IDFR VARDECNE'
M[VARDECNE,+] =  
M[VARDECNE,-] =  
M[VARDECNE,.] =  
M[VARDECNE,_] =  
M[VARDECNE,a] =  
M[VARDECNE,b] =  
M[VARDECNE,c] =  
M[VARDECNE,d] =  
M[VARDECNE,e] =  
M[VARDECNE,f] =  
M[VARDECNE,g] =  
M[VARDECNE,h] =  
M[VARDECNE,i] =  
M[VARDECNE,j] =  
M[VARDECNE,k] =  
M[VARDECNE,l] =  
M[VARDECNE,m] =  
M[VARDECNE,n] =  
M[VARDECNE,o] =  
M[VARDECNE,p] =  
M[VARDECNE,q] =  
M[VARDECNE,r] =  
M[VARDECNE,s] =  
M[VARDECNE,t] =  
M[VARDECNE,u] =  
M[VARDECNE,v] =  
M[VARDECNE,w] =  
M[VARDECNE,x] =  
M[VARDECNE,y] =  
M[VARDECNE,z] =  
M[VARDECNE,0] =  
M[VARDECNE,1] =  
M[VARDECNE,2] =  
M[VARDECNE,3] =  
M[VARDECNE,4] =  
M[VARDECNE,5] =  
M[VARDECNE,6] =  
M[VARDECNE,7] =  
M[VARDECNE,8] =  
M[VARDECNE,9] =  
M[VARDECNE,==] =  
M[VARDECNE,<] =  
M[VARDECNE,>] =  
M[VARDECNE,<=] =  
M[VARDECNE,>=] =  
M[VARDECNE,*] =  
M[VARDECNE,%] =  
M[VARDECNE,&&] =  
M[VARDECNE,/] =  
M[VARDECNE,||] =  
M[VARDECNE,$] =  
M[BLOCK,(] =  
M[BLOCK,)] =  
M[BLOCK,,] =  
M[BLOCK,{] = BLOCK { ENE }
M[BLOCK,}] =  
M[BLOCK,;] =  
M[BLOCK,if] =  
M[BLOCK,then] =  
M[BLOCK,else] =  
M[BLOCK,while] =  
M[BLOCK,do] =  
M[BLOCK,repeat] =  
M[BLOCK,until] =  
M[BLOCK,skip] =  
M[BLOCK,:=] =  
M[BLOCK,int] =  
M[BLOCK,bool] =  
M[BLOCK,float] =  
M[BLOCK,+] =  
M[BLOCK,-] =  
M[BLOCK,.] =  
M[BLOCK,_] =  
M[BLOCK,a] =  
M[BLOCK,b] =  
M[BLOCK,c] =  
M[BLOCK,d] =  
M[BLOCK,e] =  
M[BLOCK,f] =  
M[BLOCK,g] =  
M[BLOCK,h] =  
M[BLOCK,i] =  
M[BLOCK,j] =  
M[BLOCK,k] =  
M[BLOCK,l] =  
M[BLOCK,m] =  
M[BLOCK,n] =  
M[BLOCK,o] =  
M[BLOCK,p] =  
M[BLOCK,q] =  
M[BLOCK,r] =  
M[BLOCK,s] =  
M[BLOCK,t] =  
M[BLOCK,u] =  
M[BLOCK,v] =  
M[BLOCK,w] =  
M[BLOCK,x] =  
M[BLOCK,y] =  
M[BLOCK,z] =  
M[BLOCK,0] =  
M[BLOCK,1] =  
M[BLOCK,2] =  
M[BLOCK,3] =  
M[BLOCK,4] =  
M[BLOCK,5] =  
M[BLOCK,6] =  
M[BLOCK,7] =  
M[BLOCK,8] =  
M[BLOCK,9] =  
M[BLOCK,==] =  
M[BLOCK,<] =  
M[BLOCK,>] =  
M[BLOCK,<=] =  
M[BLOCK,>=] =  
M[BLOCK,*] =  
M[BLOCK,%] =  
M[BLOCK,&&] =  
M[BLOCK,/] =  
M[BLOCK,||] =  
M[BLOCK,$] =  
M[ENE,(] = ENE EXP ENE'
M[ENE,)] =  
M[ENE,,] =  
M[ENE,{] = ENE EXP ENE'
M[ENE,}] = ENE @
M[ENE,;] =  
M[ENE,if] = ENE EXP ENE'
M[ENE,then] =  
M[ENE,else] =  
M[ENE,while] = ENE EXP ENE'
M[ENE,do] =  
M[ENE,repeat] = ENE EXP ENE'
M[ENE,until] =  
M[ENE,skip] = ENE EXP ENE'
M[ENE,:=] =  
M[ENE,int] =  
M[ENE,bool] =  
M[ENE,float] =  
M[ENE,+] = ENE EXP ENE'
M[ENE,-] = ENE EXP ENE'
M[ENE,.] =  
M[ENE,_] =  
M[ENE,a] = ENE EXP ENE'
M[ENE,b] = ENE EXP ENE'
M[ENE,c] = ENE EXP ENE'
M[ENE,d] = ENE EXP ENE'
M[ENE,e] = ENE EXP ENE'
M[ENE,f] = ENE EXP ENE'
M[ENE,g] = ENE EXP ENE'
M[ENE,h] = ENE EXP ENE'
M[ENE,i] = ENE EXP ENE'
M[ENE,j] = ENE EXP ENE'
M[ENE,k] = ENE EXP ENE'
M[ENE,l] = ENE EXP ENE'
M[ENE,m] = ENE EXP ENE'
M[ENE,n] = ENE EXP ENE'
M[ENE,o] = ENE EXP ENE'
M[ENE,p] = ENE EXP ENE'
M[ENE,q] = ENE EXP ENE'
M[ENE,r] = ENE EXP ENE'
M[ENE,s] = ENE EXP ENE'
M[ENE,t] = ENE EXP ENE'
M[ENE,u] = ENE EXP ENE'
M[ENE,v] = ENE EXP ENE'
M[ENE,w] = ENE EXP ENE'
M[ENE,x] = ENE EXP ENE'
M[ENE,y] = ENE EXP ENE'
M[ENE,z] = ENE EXP ENE'
M[ENE,0] = ENE EXP ENE'
M[ENE,1] = ENE EXP ENE'
M[ENE,2] = ENE EXP ENE'
M[ENE,3] = ENE EXP ENE'
M[ENE,4] = ENE EXP ENE'
M[ENE,5] = ENE EXP ENE'
M[ENE,6] = ENE EXP ENE'
M[ENE,7] = ENE EXP ENE'
M[ENE,8] = ENE EXP ENE'
M[ENE,9] = ENE EXP ENE'
M[ENE,==] =  
M[ENE,<] =  
M[ENE,>] =  
M[ENE,<=] =  
M[ENE,>=] =  
M[ENE,*] =  
M[ENE,%] =  
M[ENE,&&] =  
M[ENE,/] =  
M[ENE,||] =  
M[ENE,$] =  
M[ENE',(] =  
M[ENE',)] =  
M[ENE',,] =  
M[ENE',{] =  
M[ENE',}] = ENE' @
M[ENE',;] = ENE' ; ENE
M[ENE',if] =  
M[ENE',then] =  
M[ENE',else] =  
M[ENE',while] =  
M[ENE',do] =  
M[ENE',repeat] =  
M[ENE',until] =  
M[ENE',skip] =  
M[ENE',:=] =  
M[ENE',int] =  
M[ENE',bool] =  
M[ENE',float] =  
M[ENE',+] =  
M[ENE',-] =  
M[ENE',.] =  
M[ENE',_] =  
M[ENE',a] =  
M[ENE',b] =  
M[ENE',c] =  
M[ENE',d] =  
M[ENE',e] =  
M[ENE',f] =  
M[ENE',g] =  
M[ENE',h] =  
M[ENE',i] =  
M[ENE',j] =  
M[ENE',k] =  
M[ENE',l] =  
M[ENE',m] =  
M[ENE',n] =  
M[ENE',o] =  
M[ENE',p] =  
M[ENE',q] =  
M[ENE',r] =  
M[ENE',s] =  
M[ENE',t] =  
M[ENE',u] =  
M[ENE',v] =  
M[ENE',w] =  
M[ENE',x] =  
M[ENE',y] =  
M[ENE',z] =  
M[ENE',0] =  
M[ENE',1] =  
M[ENE',2] =  
M[ENE',3] =  
M[ENE',4] =  
M[ENE',5] =  
M[ENE',6] =  
M[ENE',7] =  
M[ENE',8] =  
M[ENE',9] =  
M[ENE',==] =  
M[ENE',<] =  
M[ENE',>] =  
M[ENE',<=] =  
M[ENE',>=] =  
M[ENE',*] =  
M[ENE',%] =  
M[ENE',&&] =  
M[ENE',/] =  
M[ENE',||] =  
M[ENE',$] =  
M[EXP,(] = EXP ( EXP BINOP EXP )
M[EXP,)] =  
M[EXP,,] =  
M[EXP,{] = EXP BLOCK
M[EXP,}] =  
M[EXP,;] =  
M[EXP,if] = EXP if EXP then BLOCK else BLOCK
M[EXP,then] =  
M[EXP,else] =  
M[EXP,while] = EXP while EXP do BLOCK
M[EXP,do] =  
M[EXP,repeat] = EXP repeat BLOCK until EXP
M[EXP,until] =  
M[EXP,skip] = EXP skip
M[EXP,:=] =  
M[EXP,int] =  
M[EXP,bool] =  
M[EXP,float] =  
M[EXP,+] = EXP INTLIT
M[EXP,-] = EXP INTLIT
M[EXP,.] =  
M[EXP,_] =  
M[EXP,a] = EXP IDFR EXP'
M[EXP,b] = EXP IDFR EXP'
M[EXP,c] = EXP IDFR EXP'
M[EXP,d] = EXP IDFR EXP'
M[EXP,e] = EXP IDFR EXP'
M[EXP,f] = EXP IDFR EXP'
M[EXP,g] = EXP IDFR EXP'
M[EXP,h] = EXP IDFR EXP'
M[EXP,i] = EXP IDFR EXP'
M[EXP,j] = EXP IDFR EXP'
M[EXP,k] = EXP IDFR EXP'
M[EXP,l] = EXP IDFR EXP'
M[EXP,m] = EXP IDFR EXP'
M[EXP,n] = EXP IDFR EXP'
M[EXP,o] = EXP IDFR EXP'
M[EXP,p] = EXP IDFR EXP'
M[EXP,q] = EXP IDFR EXP'
M[EXP,r] = EXP IDFR EXP'
M[EXP,s] = EXP IDFR EXP'
M[EXP,t] = EXP IDFR EXP'
M[EXP,u] = EXP IDFR EXP'
M[EXP,v] = EXP IDFR EXP'
M[EXP,w] = EXP IDFR EXP'
M[EXP,x] = EXP IDFR EXP'
M[EXP,y] = EXP IDFR EXP'
M[EXP,z] = EXP IDFR EXP'
M[EXP,0] = EXP INTLIT
M[EXP,1] = EXP INTLIT
M[EXP,2] = EXP INTLIT
M[EXP,3] = EXP INTLIT
M[EXP,4] = EXP INTLIT
M[EXP,5] = EXP INTLIT
M[EXP,6] = EXP INTLIT
M[EXP,7] = EXP INTLIT
M[EXP,8] = EXP INTLIT
M[EXP,9] = EXP INTLIT
M[EXP,==] =  
M[EXP,<] =  
M[EXP,>] =  
M[EXP,<=] =  
M[EXP,>=] =  
M[EXP,*] =  
M[EXP,%] =  
M[EXP,&&] =  
M[EXP,/] =  
M[EXP,||] =  
M[EXP,$] =  
M[EXP',(] = EXP' ( ARGS )
M[EXP',)] = EXP' @
M[EXP',,] = EXP' @
M[EXP',{] =  
M[EXP',}] = EXP' @
M[EXP',;] = EXP' @
M[EXP',if] =  
M[EXP',then] = EXP' @
M[EXP',else] =  
M[EXP',while] =  
M[EXP',do] = EXP' @
M[EXP',repeat] =  
M[EXP',until] =  
M[EXP',skip] =  
M[EXP',:=] = EXP' := EXP
M[EXP',int] =  
M[EXP',bool] =  
M[EXP',float] =  
M[EXP',+] = EXP' @
M[EXP',-] = EXP' @
M[EXP',.] =  
M[EXP',_] =  
M[EXP',a] =  
M[EXP',b] =  
M[EXP',c] =  
M[EXP',d] =  
M[EXP',e] =  
M[EXP',f] =  
M[EXP',g] =  
M[EXP',h] =  
M[EXP',i] =  
M[EXP',j] =  
M[EXP',k] =  
M[EXP',l] =  
M[EXP',m] =  
M[EXP',n] =  
M[EXP',o] =  
M[EXP',p] =  
M[EXP',q] =  
M[EXP',r] =  
M[EXP',s] =  
M[EXP',t] =  
M[EXP',u] =  
M[EXP',v] =  
M[EXP',w] =  
M[EXP',x] =  
M[EXP',y] =  
M[EXP',z] =  
M[EXP',0] =  
M[EXP',1] =  
M[EXP',2] =  
M[EXP',3] =  
M[EXP',4] =  
M[EXP',5] =  
M[EXP',6] =  
M[EXP',7] =  
M[EXP',8] =  
M[EXP',9] =  
M[EXP',==] = EXP' @
M[EXP',<] = EXP' @
M[EXP',>] = EXP' @
M[EXP',<=] = EXP' @
M[EXP',>=] = EXP' @
M[EXP',*] = EXP' @
M[EXP',%] = EXP' @
M[EXP',&&] = EXP' @
M[EXP',/] = EXP' @
M[EXP',||] = EXP' @
M[EXP',$] =  
M[ARGS,(] = ARGS ARGSNE
M[ARGS,)] = ARGS @
M[ARGS,,] =  
M[ARGS,{] = ARGS ARGSNE
M[ARGS,}] =  
M[ARGS,;] =  
M[ARGS,if] = ARGS ARGSNE
M[ARGS,then] =  
M[ARGS,else] =  
M[ARGS,while] = ARGS ARGSNE
M[ARGS,do] =  
M[ARGS,repeat] = ARGS ARGSNE
M[ARGS,until] =  
M[ARGS,skip] = ARGS ARGSNE
M[ARGS,:=] =  
M[ARGS,int] =  
M[ARGS,bool] =  
M[ARGS,float] =  
M[ARGS,+] = ARGS ARGSNE
M[ARGS,-] = ARGS ARGSNE
M[ARGS,.] =  
M[ARGS,_] =  
M[ARGS,a] = ARGS ARGSNE
M[ARGS,b] = ARGS ARGSNE
M[ARGS,c] = ARGS ARGSNE
M[ARGS,d] = ARGS ARGSNE
M[ARGS,e] = ARGS ARGSNE
M[ARGS,f] = ARGS ARGSNE
M[ARGS,g] = ARGS ARGSNE
M[ARGS,h] = ARGS ARGSNE
M[ARGS,i] = ARGS ARGSNE
M[ARGS,j] = ARGS ARGSNE
M[ARGS,k] = ARGS ARGSNE
M[ARGS,l] = ARGS ARGSNE
M[ARGS,m] = ARGS ARGSNE
M[ARGS,n] = ARGS ARGSNE
M[ARGS,o] = ARGS ARGSNE
M[ARGS,p] = ARGS ARGSNE
M[ARGS,q] = ARGS ARGSNE
M[ARGS,r] = ARGS ARGSNE
M[ARGS,s] = ARGS ARGSNE
M[ARGS,t] = ARGS ARGSNE
M[ARGS,u] = ARGS ARGSNE
M[ARGS,v] = ARGS ARGSNE
M[ARGS,w] = ARGS ARGSNE
M[ARGS,x] = ARGS ARGSNE
M[ARGS,y] = ARGS ARGSNE
M[ARGS,z] = ARGS ARGSNE
M[ARGS,0] = ARGS ARGSNE
M[ARGS,1] = ARGS ARGSNE
M[ARGS,2] = ARGS ARGSNE
M[ARGS,3] = ARGS ARGSNE
M[ARGS,4] = ARGS ARGSNE
M[ARGS,5] = ARGS ARGSNE
M[ARGS,6] = ARGS ARGSNE
M[ARGS,7] = ARGS ARGSNE
M[ARGS,8] = ARGS ARGSNE
M[ARGS,9] = ARGS ARGSNE
M[ARGS,==] =  
M[ARGS,<] =  
M[ARGS,>] =  
M[ARGS,<=] =  
M[ARGS,>=] =  
M[ARGS,*] =  
M[ARGS,%] =  
M[ARGS,&&] =  
M[ARGS,/] =  
M[ARGS,||] =  
M[ARGS,$] =  
M[ARGSNE',(] =  
M[ARGSNE',)] = ARGSNE' @
M[ARGSNE',,] = ARGSNE' , EXP ARGSNE'
M[ARGSNE',{] =  
M[ARGSNE',}] =  
M[ARGSNE',;] =  
M[ARGSNE',if] =  
M[ARGSNE',then] =  
M[ARGSNE',else] =  
M[ARGSNE',while] =  
M[ARGSNE',do] =  
M[ARGSNE',repeat] =  
M[ARGSNE',until] =  
M[ARGSNE',skip] =  
M[ARGSNE',:=] =  
M[ARGSNE',int] =  
M[ARGSNE',bool] =  
M[ARGSNE',float] =  
M[ARGSNE',+] =  
M[ARGSNE',-] =  
M[ARGSNE',.] =  
M[ARGSNE',_] =  
M[ARGSNE',a] =  
M[ARGSNE',b] =  
M[ARGSNE',c] =  
M[ARGSNE',d] =  
M[ARGSNE',e] =  
M[ARGSNE',f] =  
M[ARGSNE',g] =  
M[ARGSNE',h] =  
M[ARGSNE',i] =  
M[ARGSNE',j] =  
M[ARGSNE',k] =  
M[ARGSNE',l] =  
M[ARGSNE',m] =  
M[ARGSNE',n] =  
M[ARGSNE',o] =  
M[ARGSNE',p] =  
M[ARGSNE',q] =  
M[ARGSNE',r] =  
M[ARGSNE',s] =  
M[ARGSNE',t] =  
M[ARGSNE',u] =  
M[ARGSNE',v] =  
M[ARGSNE',w] =  
M[ARGSNE',x] =  
M[ARGSNE',y] =  
M[ARGSNE',z] =  
M[ARGSNE',0] =  
M[ARGSNE',1] =  
M[ARGSNE',2] =  
M[ARGSNE',3] =  
M[ARGSNE',4] =  
M[ARGSNE',5] =  
M[ARGSNE',6] =  
M[ARGSNE',7] =  
M[ARGSNE',8] =  
M[ARGSNE',9] =  
M[ARGSNE',==] =  
M[ARGSNE',<] =  
M[ARGSNE',>] =  
M[ARGSNE',<=] =  
M[ARGSNE',>=] =  
M[ARGSNE',*] =  
M[ARGSNE',%] =  
M[ARGSNE',&&] =  
M[ARGSNE',/] =  
M[ARGSNE',||] =  
M[ARGSNE',$] =  
M[ARGSNE,(] = ARGSNE EXP ARGSNE'
M[ARGSNE,)] =  
M[ARGSNE,,] =  
M[ARGSNE,{] = ARGSNE EXP ARGSNE'
M[ARGSNE,}] =  
M[ARGSNE,;] =  
M[ARGSNE,if] = ARGSNE EXP ARGSNE'
M[ARGSNE,then] =  
M[ARGSNE,else] =  
M[ARGSNE,while] = ARGSNE EXP ARGSNE'
M[ARGSNE,do] =  
M[ARGSNE,repeat] = ARGSNE EXP ARGSNE'
M[ARGSNE,until] =  
M[ARGSNE,skip] = ARGSNE EXP ARGSNE'
M[ARGSNE,:=] =  
M[ARGSNE,int] =  
M[ARGSNE,bool] =  
M[ARGSNE,float] =  
M[ARGSNE,+] = ARGSNE EXP ARGSNE'
M[ARGSNE,-] = ARGSNE EXP ARGSNE'
M[ARGSNE,.] =  
M[ARGSNE,_] =  
M[ARGSNE,a] = ARGSNE EXP ARGSNE'
M[ARGSNE,b] = ARGSNE EXP ARGSNE'
M[ARGSNE,c] = ARGSNE EXP ARGSNE'
M[ARGSNE,d] = ARGSNE EXP ARGSNE'
M[ARGSNE,e] = ARGSNE EXP ARGSNE'
M[ARGSNE,f] = ARGSNE EXP ARGSNE'
M[ARGSNE,g] = ARGSNE EXP ARGSNE'
M[ARGSNE,h] = ARGSNE EXP ARGSNE'
M[ARGSNE,i] = ARGSNE EXP ARGSNE'
M[ARGSNE,j] = ARGSNE EXP ARGSNE'
M[ARGSNE,k] = ARGSNE EXP ARGSNE'
M[ARGSNE,l] = ARGSNE EXP ARGSNE'
M[ARGSNE,m] = ARGSNE EXP ARGSNE'
M[ARGSNE,n] = ARGSNE EXP ARGSNE'
M[ARGSNE,o] = ARGSNE EXP ARGSNE'
M[ARGSNE,p] = ARGSNE EXP ARGSNE'
M[ARGSNE,q] = ARGSNE EXP ARGSNE'
M[ARGSNE,r] = ARGSNE EXP ARGSNE'
M[ARGSNE,s] = ARGSNE EXP ARGSNE'
M[ARGSNE,t] = ARGSNE EXP ARGSNE'
M[ARGSNE,u] = ARGSNE EXP ARGSNE'
M[ARGSNE,v] = ARGSNE EXP ARGSNE'
M[ARGSNE,w] = ARGSNE EXP ARGSNE'
M[ARGSNE,x] = ARGSNE EXP ARGSNE'
M[ARGSNE,y] = ARGSNE EXP ARGSNE'
M[ARGSNE,z] = ARGSNE EXP ARGSNE'
M[ARGSNE,0] = ARGSNE EXP ARGSNE'
M[ARGSNE,1] = ARGSNE EXP ARGSNE'
M[ARGSNE,2] = ARGSNE EXP ARGSNE'
M[ARGSNE,3] = ARGSNE EXP ARGSNE'
M[ARGSNE,4] = ARGSNE EXP ARGSNE'
M[ARGSNE,5] = ARGSNE EXP ARGSNE'
M[ARGSNE,6] = ARGSNE EXP ARGSNE'
M[ARGSNE,7] = ARGSNE EXP ARGSNE'
M[ARGSNE,8] = ARGSNE EXP ARGSNE'
M[ARGSNE,9] = ARGSNE EXP ARGSNE'
M[ARGSNE,==] =  
M[ARGSNE,<] =  
M[ARGSNE,>] =  
M[ARGSNE,<=] =  
M[ARGSNE,>=] =  
M[ARGSNE,*] =  
M[ARGSNE,%] =  
M[ARGSNE,&&] =  
M[ARGSNE,/] =  
M[ARGSNE,||] =  
M[ARGSNE,$] =  
M[TYPE,(] =  
M[TYPE,)] =  
M[TYPE,,] =  
M[TYPE,{] =  
M[TYPE,}] =  
M[TYPE,;] =  
M[TYPE,if] =  
M[TYPE,then] =  
M[TYPE,else] =  
M[TYPE,while] =  
M[TYPE,do] =  
M[TYPE,repeat] =  
M[TYPE,until] =  
M[TYPE,skip] =  
M[TYPE,:=] =  
M[TYPE,int] = TYPE int
M[TYPE,bool] = TYPE bool
M[TYPE,float] = TYPE float
M[TYPE,+] =  
M[TYPE,-] =  
M[TYPE,.] =  
M[TYPE,_] =  
M[TYPE,a] =  
M[TYPE,b] =  
M[TYPE,c] =  
M[TYPE,d] =  
M[TYPE,e] =  
M[TYPE,f] =  
M[TYPE,g] =  
M[TYPE,h] =  
M[TYPE,i] =  
M[TYPE,j] =  
M[TYPE,k] =  
M[TYPE,l] =  
M[TYPE,m] =  
M[TYPE,n] =  
M[TYPE,o] =  
M[TYPE,p] =  
M[TYPE,q] =  
M[TYPE,r] =  
M[TYPE,s] =  
M[TYPE,t] =  
M[TYPE,u] =  
M[TYPE,v] =  
M[TYPE,w] =  
M[TYPE,x] =  
M[TYPE,y] =  
M[TYPE,z] =  
M[TYPE,0] =  
M[TYPE,1] =  
M[TYPE,2] =  
M[TYPE,3] =  
M[TYPE,4] =  
M[TYPE,5] =  
M[TYPE,6] =  
M[TYPE,7] =  
M[TYPE,8] =  
M[TYPE,9] =  
M[TYPE,==] =  
M[TYPE,<] =  
M[TYPE,>] =  
M[TYPE,<=] =  
M[TYPE,>=] =  
M[TYPE,*] =  
M[TYPE,%] =  
M[TYPE,&&] =  
M[TYPE,/] =  
M[TYPE,||] =  
M[TYPE,$] =  
M[IDFR,(] =  
M[IDFR,)] =  
M[IDFR,,] =  
M[IDFR,{] =  
M[IDFR,}] =  
M[IDFR,;] =  
M[IDFR,if] =  
M[IDFR,then] =  
M[IDFR,else] =  
M[IDFR,while] =  
M[IDFR,do] =  
M[IDFR,repeat] =  
M[IDFR,until] =  
M[IDFR,skip] =  
M[IDFR,:=] =  
M[IDFR,int] =  
M[IDFR,bool] =  
M[IDFR,float] =  
M[IDFR,+] =  
M[IDFR,-] =  
M[IDFR,.] =  
M[IDFR,_] =  
M[IDFR,a] = IDFR SMALL REP
M[IDFR,b] = IDFR SMALL REP
M[IDFR,c] = IDFR SMALL REP
M[IDFR,d] = IDFR SMALL REP
M[IDFR,e] = IDFR SMALL REP
M[IDFR,f] = IDFR SMALL REP
M[IDFR,g] = IDFR SMALL REP
M[IDFR,h] = IDFR SMALL REP
M[IDFR,i] = IDFR SMALL REP
M[IDFR,j] = IDFR SMALL REP
M[IDFR,k] = IDFR SMALL REP
M[IDFR,l] = IDFR SMALL REP
M[IDFR,m] = IDFR SMALL REP
M[IDFR,n] = IDFR SMALL REP
M[IDFR,o] = IDFR SMALL REP
M[IDFR,p] = IDFR SMALL REP
M[IDFR,q] = IDFR SMALL REP
M[IDFR,r] = IDFR SMALL REP
M[IDFR,s] = IDFR SMALL REP
M[IDFR,t] = IDFR SMALL REP
M[IDFR,u] = IDFR SMALL REP
M[IDFR,v] = IDFR SMALL REP
M[IDFR,w] = IDFR SMALL REP
M[IDFR,x] = IDFR SMALL REP
M[IDFR,y] = IDFR SMALL REP
M[IDFR,z] = IDFR SMALL REP
M[IDFR,0] =  
M[IDFR,1] =  
M[IDFR,2] =  
M[IDFR,3] =  
M[IDFR,4] =  
M[IDFR,5] =  
M[IDFR,6] =  
M[IDFR,7] =  
M[IDFR,8] =  
M[IDFR,9] =  
M[IDFR,==] =  
M[IDFR,<] =  
M[IDFR,>] =  
M[IDFR,<=] =  
M[IDFR,>=] =  
M[IDFR,*] =  
M[IDFR,%] =  
M[IDFR,&&] =  
M[IDFR,/] =  
M[IDFR,||] =  
M[IDFR,$] =  
M[INTLIT,(] =  
M[INTLIT,)] =  
M[INTLIT,,] =  
M[INTLIT,{] =  
M[INTLIT,}] =  
M[INTLIT,;] =  
M[INTLIT,if] =  
M[INTLIT,then] =  
M[INTLIT,else] =  
M[INTLIT,while] =  
M[INTLIT,do] =  
M[INTLIT,repeat] =  
M[INTLIT,until] =  
M[INTLIT,skip] =  
M[INTLIT,:=] =  
M[INTLIT,int] =  
M[INTLIT,bool] =  
M[INTLIT,float] =  
M[INTLIT,+] = INTLIT + DIGIT REPD
M[INTLIT,-] = INTLIT - DIGIT REPD
M[INTLIT,.] =  
M[INTLIT,_] =  
M[INTLIT,a] =  
M[INTLIT,b] =  
M[INTLIT,c] =  
M[INTLIT,d] =  
M[INTLIT,e] =  
M[INTLIT,f] =  
M[INTLIT,g] =  
M[INTLIT,h] =  
M[INTLIT,i] =  
M[INTLIT,j] =  
M[INTLIT,k] =  
M[INTLIT,l] =  
M[INTLIT,m] =  
M[INTLIT,n] =  
M[INTLIT,o] =  
M[INTLIT,p] =  
M[INTLIT,q] =  
M[INTLIT,r] =  
M[INTLIT,s] =  
M[INTLIT,t] =  
M[INTLIT,u] =  
M[INTLIT,v] =  
M[INTLIT,w] =  
M[INTLIT,x] =  
M[INTLIT,y] =  
M[INTLIT,z] =  
M[INTLIT,0] = INTLIT DIGIT REPD
M[INTLIT,1] = INTLIT DIGIT REPD
M[INTLIT,2] = INTLIT DIGIT REPD
M[INTLIT,3] = INTLIT DIGIT REPD
M[INTLIT,4] = INTLIT DIGIT REPD
M[INTLIT,5] = INTLIT DIGIT REPD
M[INTLIT,6] = INTLIT DIGIT REPD
M[INTLIT,7] = INTLIT DIGIT REPD
M[INTLIT,8] = INTLIT DIGIT REPD
M[INTLIT,9] = INTLIT DIGIT REPD
M[INTLIT,==] =  
M[INTLIT,<] =  
M[INTLIT,>] =  
M[INTLIT,<=] =  
M[INTLIT,>=] =  
M[INTLIT,*] =  
M[INTLIT,%] =  
M[INTLIT,&&] =  
M[INTLIT,/] =  
M[INTLIT,||] =  
M[INTLIT,$] =  
M[FLOATLIT,(] =  
M[FLOATLIT,)] =  
M[FLOATLIT,,] =  
M[FLOATLIT,{] =  
M[FLOATLIT,}] =  
M[FLOATLIT,;] =  
M[FLOATLIT,if] =  
M[FLOATLIT,then] =  
M[FLOATLIT,else] =  
M[FLOATLIT,while] =  
M[FLOATLIT,do] =  
M[FLOATLIT,repeat] =  
M[FLOATLIT,until] =  
M[FLOATLIT,skip] =  
M[FLOATLIT,:=] =  
M[FLOATLIT,int] =  
M[FLOATLIT,bool] =  
M[FLOATLIT,float] =  
M[FLOATLIT,+] = FLOATLIT INTLIT . REPD
M[FLOATLIT,-] = FLOATLIT INTLIT . REPD
M[FLOATLIT,.] =  
M[FLOATLIT,_] =  
M[FLOATLIT,a] =  
M[FLOATLIT,b] =  
M[FLOATLIT,c] =  
M[FLOATLIT,d] =  
M[FLOATLIT,e] =  
M[FLOATLIT,f] =  
M[FLOATLIT,g] =  
M[FLOATLIT,h] =  
M[FLOATLIT,i] =  
M[FLOATLIT,j] =  
M[FLOATLIT,k] =  
M[FLOATLIT,l] =  
M[FLOATLIT,m] =  
M[FLOATLIT,n] =  
M[FLOATLIT,o] =  
M[FLOATLIT,p] =  
M[FLOATLIT,q] =  
M[FLOATLIT,r] =  
M[FLOATLIT,s] =  
M[FLOATLIT,t] =  
M[FLOATLIT,u] =  
M[FLOATLIT,v] =  
M[FLOATLIT,w] =  
M[FLOATLIT,x] =  
M[FLOATLIT,y] =  
M[FLOATLIT,z] =  
M[FLOATLIT,0] = FLOATLIT INTLIT . REPD
M[FLOATLIT,1] = FLOATLIT INTLIT . REPD
M[FLOATLIT,2] = FLOATLIT INTLIT . REPD
M[FLOATLIT,3] = FLOATLIT INTLIT . REPD
M[FLOATLIT,4] = FLOATLIT INTLIT . REPD
M[FLOATLIT,5] = FLOATLIT INTLIT . REPD
M[FLOATLIT,6] = FLOATLIT INTLIT . REPD
M[FLOATLIT,7] = FLOATLIT INTLIT . REPD
M[FLOATLIT,8] = FLOATLIT INTLIT . REPD
M[FLOATLIT,9] = FLOATLIT INTLIT . REPD
M[FLOATLIT,==] =  
M[FLOATLIT,<] =  
M[FLOATLIT,>] =  
M[FLOATLIT,<=] =  
M[FLOATLIT,>=] =  
M[FLOATLIT,*] =  
M[FLOATLIT,%] =  
M[FLOATLIT,&&] =  
M[FLOATLIT,/] =  
M[FLOATLIT,||] =  
M[FLOATLIT,$] =  
M[REP,(] = REP @
M[REP,)] = REP @
M[REP,,] = REP @
M[REP,{] =  
M[REP,}] = REP @
M[REP,;] = REP @
M[REP,if] =  
M[REP,then] = REP @
M[REP,else] =  
M[REP,while] =  
M[REP,do] = REP @
M[REP,repeat] =  
M[REP,until] =  
M[REP,skip] =  
M[REP,:=] = REP @
M[REP,int] =  
M[REP,bool] =  
M[REP,float] =  
M[REP,+] = REP @
M[REP,-] = REP @
M[REP,.] =  
M[REP,_] = REP _ REP
M[REP,a] = REP SMALL REP
M[REP,b] = REP SMALL REP
M[REP,c] = REP SMALL REP
M[REP,d] = REP SMALL REP
M[REP,e] = REP SMALL REP
M[REP,f] = REP SMALL REP
M[REP,g] = REP SMALL REP
M[REP,h] = REP SMALL REP
M[REP,i] = REP SMALL REP
M[REP,j] = REP SMALL REP
M[REP,k] = REP SMALL REP
M[REP,l] = REP SMALL REP
M[REP,m] = REP SMALL REP
M[REP,n] = REP SMALL REP
M[REP,o] = REP SMALL REP
M[REP,p] = REP SMALL REP
M[REP,q] = REP SMALL REP
M[REP,r] = REP SMALL REP
M[REP,s] = REP SMALL REP
M[REP,t] = REP SMALL REP
M[REP,u] = REP SMALL REP
M[REP,v] = REP SMALL REP
M[REP,w] = REP SMALL REP
M[REP,x] = REP SMALL REP
M[REP,y] = REP SMALL REP
M[REP,z] = REP SMALL REP
M[REP,0] = REP DIGIT REP
M[REP,1] = REP DIGIT REP
M[REP,2] = REP DIGIT REP
M[REP,3] = REP DIGIT REP
M[REP,4] = REP DIGIT REP
M[REP,5] = REP DIGIT REP
M[REP,6] = REP DIGIT REP
M[REP,7] = REP DIGIT REP
M[REP,8] = REP DIGIT REP
M[REP,9] = REP DIGIT REP
M[REP,==] = REP @
M[REP,<] = REP @
M[REP,>] = REP @
M[REP,<=] = REP @
M[REP,>=] = REP @
M[REP,*] = REP @
M[REP,%] = REP @
M[REP,&&] = REP @
M[REP,/] = REP @
M[REP,||] = REP @
M[REP,$] =  
M[REPD,(] =  
M[REPD,)] = REPD @
M[REPD,,] = REPD @
M[REPD,{] =  
M[REPD,}] = REPD @
M[REPD,;] = REPD @
M[REPD,if] =  
M[REPD,then] = REPD @
M[REPD,else] =  
M[REPD,while] =  
M[REPD,do] = REPD @
M[REPD,repeat] =  
M[REPD,until] =  
M[REPD,skip] =  
M[REPD,:=] =  
M[REPD,int] =  
M[REPD,bool] =  
M[REPD,float] =  
M[REPD,+] = REPD @
M[REPD,-] = REPD @
M[REPD,.] = REPD @
M[REPD,_] =  
M[REPD,a] =  
M[REPD,b] =  
M[REPD,c] =  
M[REPD,d] =  
M[REPD,e] =  
M[REPD,f] =  
M[REPD,g] =  
M[REPD,h] =  
M[REPD,i] =  
M[REPD,j] =  
M[REPD,k] =  
M[REPD,l] =  
M[REPD,m] =  
M[REPD,n] =  
M[REPD,o] =  
M[REPD,p] =  
M[REPD,q] =  
M[REPD,r] =  
M[REPD,s] =  
M[REPD,t] =  
M[REPD,u] =  
M[REPD,v] =  
M[REPD,w] =  
M[REPD,x] =  
M[REPD,y] =  
M[REPD,z] =  
M[REPD,0] =  
M[REPD,1] =  
M[REPD,2] =  
M[REPD,3] =  
M[REPD,4] =  
M[REPD,5] =  
M[REPD,6] =  
M[REPD,7] =  
M[REPD,8] =  
M[REPD,9] =  
M[REPD,==] = REPD @
M[REPD,<] = REPD @
M[REPD,>] = REPD @
M[REPD,<=] = REPD @
M[REPD,>=] = REPD @
M[REPD,*] = REPD @
M[REPD,%] = REPD @
M[REPD,&&] = REPD @
M[REPD,/] = REPD @
M[REPD,||] = REPD @
M[REPD,$] =  
M[SMALL,(] =  
M[SMALL,)] =  
M[SMALL,,] =  
M[SMALL,{] =  
M[SMALL,}] =  
M[SMALL,;] =  
M[SMALL,if] =  
M[SMALL,then] =  
M[SMALL,else] =  
M[SMALL,while] =  
M[SMALL,do] =  
M[SMALL,repeat] =  
M[SMALL,until] =  
M[SMALL,skip] =  
M[SMALL,:=] =  
M[SMALL,int] =  
M[SMALL,bool] =  
M[SMALL,float] =  
M[SMALL,+] =  
M[SMALL,-] =  
M[SMALL,.] =  
M[SMALL,_] =  
M[SMALL,a] = SMALL a
M[SMALL,b] = SMALL b
M[SMALL,c] = SMALL c
M[SMALL,d] = SMALL d
M[SMALL,e] = SMALL e
M[SMALL,f] = SMALL f
M[SMALL,g] = SMALL g
M[SMALL,h] = SMALL h
M[SMALL,i] = SMALL i
M[SMALL,j] = SMALL j
M[SMALL,k] = SMALL k
M[SMALL,l] = SMALL l
M[SMALL,m] = SMALL m
M[SMALL,n] = SMALL n
M[SMALL,o] = SMALL o
M[SMALL,p] = SMALL p
M[SMALL,q] = SMALL q
M[SMALL,r] = SMALL r
M[SMALL,s] = SMALL s
M[SMALL,t] = SMALL t
M[SMALL,u] = SMALL u
M[SMALL,v] = SMALL v
M[SMALL,w] = SMALL w
M[SMALL,x] = SMALL x
M[SMALL,y] = SMALL y
M[SMALL,z] = SMALL z
M[SMALL,0] =  
M[SMALL,1] =  
M[SMALL,2] =  
M[SMALL,3] =  
M[SMALL,4] =  
M[SMALL,5] =  
M[SMALL,6] =  
M[SMALL,7] =  
M[SMALL,8] =  
M[SMALL,9] =  
M[SMALL,==] =  
M[SMALL,<] =  
M[SMALL,>] =  
M[SMALL,<=] =  
M[SMALL,>=] =  
M[SMALL,*] =  
M[SMALL,%] =  
M[SMALL,&&] =  
M[SMALL,/] =  
M[SMALL,||] =  
M[SMALL,$] =  
M[DIGIT,(] =  
M[DIGIT,)] =  
M[DIGIT,,] =  
M[DIGIT,{] =  
M[DIGIT,}] =  
M[DIGIT,;] =  
M[DIGIT,if] =  
M[DIGIT,then] =  
M[DIGIT,else] =  
M[DIGIT,while] =  
M[DIGIT,do] =  
M[DIGIT,repeat] =  
M[DIGIT,until] =  
M[DIGIT,skip] =  
M[DIGIT,:=] =  
M[DIGIT,int] =  
M[DIGIT,bool] =  
M[DIGIT,float] =  
M[DIGIT,+] =  
M[DIGIT,-] =  
M[DIGIT,.] =  
M[DIGIT,_] =  
M[DIGIT,a] =  
M[DIGIT,b] =  
M[DIGIT,c] =  
M[DIGIT,d] =  
M[DIGIT,e] =  
M[DIGIT,f] =  
M[DIGIT,g] =  
M[DIGIT,h] =  
M[DIGIT,i] =  
M[DIGIT,j] =  
M[DIGIT,k] =  
M[DIGIT,l] =  
M[DIGIT,m] =  
M[DIGIT,n] =  
M[DIGIT,o] =  
M[DIGIT,p] =  
M[DIGIT,q] =  
M[DIGIT,r] =  
M[DIGIT,s] =  
M[DIGIT,t] =  
M[DIGIT,u] =  
M[DIGIT,v] =  
M[DIGIT,w] =  
M[DIGIT,x] =  
M[DIGIT,y] =  
M[DIGIT,z] =  
M[DIGIT,0] = DIGIT 0
M[DIGIT,1] = DIGIT 1
M[DIGIT,2] = DIGIT 2
M[DIGIT,3] = DIGIT 3
M[DIGIT,4] = DIGIT 4
M[DIGIT,5] = DIGIT 5
M[DIGIT,6] = DIGIT 6
M[DIGIT,7] = DIGIT 7
M[DIGIT,8] = DIGIT 8
M[DIGIT,9] = DIGIT 9
M[DIGIT,==] =  
M[DIGIT,<] =  
M[DIGIT,>] =  
M[DIGIT,<=] =  
M[DIGIT,>=] =  
M[DIGIT,*] =  
M[DIGIT,%] =  
M[DIGIT,&&] =  
M[DIGIT,/] =  
M[DIGIT,||] =  
M[DIGIT,$] =  
M[BINOP,(] =  
M[BINOP,)] =  
M[BINOP,,] =  
M[BINOP,{] =  
M[BINOP,}] =  
M[BINOP,;] =  
M[BINOP,if] =  
M[BINOP,then] =  
M[BINOP,else] =  
M[BINOP,while] =  
M[BINOP,do] =  
M[BINOP,repeat] =  
M[BINOP,until] =  
M[BINOP,skip] =  
M[BINOP,:=] =  
M[BINOP,int] =  
M[BINOP,bool] =  
M[BINOP,float] =  
M[BINOP,+] = BINOP +
M[BINOP,-] = BINOP -
M[BINOP,.] =  
M[BINOP,_] =  
M[BINOP,a] =  
M[BINOP,b] =  
M[BINOP,c] =  
M[BINOP,d] =  
M[BINOP,e] =  
M[BINOP,f] =  
M[BINOP,g] =  
M[BINOP,h] =  
M[BINOP,i] =  
M[BINOP,j] =  
M[BINOP,k] =  
M[BINOP,l] =  
M[BINOP,m] =  
M[BINOP,n] =  
M[BINOP,o] =  
M[BINOP,p] =  
M[BINOP,q] =  
M[BINOP,r] =  
M[BINOP,s] =  
M[BINOP,t] =  
M[BINOP,u] =  
M[BINOP,v] =  
M[BINOP,w] =  
M[BINOP,x] =  
M[BINOP,y] =  
M[BINOP,z] =  
M[BINOP,0] =  
M[BINOP,1] =  
M[BINOP,2] =  
M[BINOP,3] =  
M[BINOP,4] =  
M[BINOP,5] =  
M[BINOP,6] =  
M[BINOP,7] =  
M[BINOP,8] =  
M[BINOP,9] =  
M[BINOP,==] = BINOP ==
M[BINOP,<] = BINOP <
M[BINOP,>] = BINOP >
M[BINOP,<=] = BINOP <=
M[BINOP,>=] = BINOP >=
M[BINOP,*] = BINOP *
M[BINOP,%] = BINOP %
M[BINOP,&&] = BINOP &&
M[BINOP,/] = BINOP /
M[BINOP,||] = BINOP ||
M[BINOP,$] =  
